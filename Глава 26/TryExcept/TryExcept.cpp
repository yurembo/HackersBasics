// TryExcept.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>
#include <windows.h>

int main()
{
	// Защищенный блок 
	__try
	{
		// Попытка деления на ноль
		int a = 1;	
		int b = 1;	
		int c = 2 / (a - b);
		// Такая многословность объясняется тем, что большинство компиляторов
		// выдают ошибку, встретив конструкцию наподобие int a=a/0;
		// при выполнении деления отладчики, в том числе WinDbg, 
		// теряют контроль над отлаживаемой программой и "слетают".
		// Поэтому сюда может быть вставлен некий код для "отвода глаз",
		// который никогда не получит управления, 
		// Если значения переменным a и b присваивается не непосредственно, а 
		// из результата, возвращенного некими функциями, то при 
		// дизассемблировании программы их равенство будет не так 
		// очевидно. В результате взломщик может потратить много 
		// времени на анализ совершенно бесполезного кода.
	}
	__except(EXCEPTION_EXECUTE_HANDLER)
	{
		std::cout << "Error";
		// этот код получит управление при возникновении 
		// исключения "деление на ноль",
		// но отладчики не распознают такой ситуации.
		// Требуется ручная установка точки останова на первую 
		// инструкцию блока	__except.
		// А, чтобы определить адрес блока __except, требуется
		// разобраться, каким именно образом реализована поддержка 
		// SEH в конкретном компиляторе. 
		// Что опять же потребует от хакера непрелично много времени.
	}
}